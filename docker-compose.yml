version: '3.8'  # 确保有版本号

volumes:
  langgraph-data:
    driver: local

services:
  langgraph-redis:
    image: docker.io/redis:6
    container_name: langgraph-redis
    restart: unless-stopped  # 或使用 always
    healthcheck:
      test: redis-cli ping
      interval: 5s
      timeout: 1s
      retries: 5
  
  langgraph-postgres:
    image: docker.io/postgres:16
    container_name: langgraph-postgres
    restart: unless-stopped  # 或使用 always
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - langgraph-data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U postgres
      start_period: 10s
      timeout: 1s
      retries: 5
      interval: 5s
  
  langgraph-api:
    image: gemini-fullstack-langgraph
    container_name: langgraph-api
    restart: unless-stopped  # 或使用 always
    ports:
      - "8123:8000"
    depends_on:
      langgraph-redis:
        condition: service_healthy
      langgraph-postgres:
        condition: service_healthy
    environment:
      UVICORN_TIMEOUT: 1800
      APP_TOKEN: ${APP_TOKEN}
      LLM_BASE_URL: ${LLM_BASE_URL}
      MCP_APP_ID: ${MCP_APP_ID}
      LANGGRAPH_CLOUD_LICENSE_KEY: ""
      LANGGRAPH_LICENSE_MODE: "local"
      REDIS_URI: redis://langgraph-redis:6379
      POSTGRES_URI: postgres://postgres:postgres@langgraph-postgres:5432/postgres?sslmode=disable